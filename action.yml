name: Setup Go
description: Setup Go SDK
author: Incognia
inputs:
  go-version:
    description: "The Go version to set up. Takes a whole or semver Java version. See examples of supported syntax in actions/setup-go's README"
    required: true

  cache:
    description: 'Whether to enable caching'
    default: true

  path:
    description: 'A list of files, directories, and wildcard patterns to cache and restore'
    default: |
      /go/pkg/mod

  key:
    description: 'An explicit key for restoring and saving the cache'
    default: ${{ runner.os }}-go-dependencies-${{ hashFiles('go.sum') }}

  restore-keys:
    description: 'An ordered list of keys to use for restoring the cache if no cache hit occurred for key'
    default: |
      ${{ runner.os }}-go-dependencies-

  format:
    description: 'Whether to run gofmt'
    default: true

  source-path:
    description: 'Source directory to run gomt'
    default: 'src'

  gcc:
    description: 'Whether to install GCC'
    default: false

runs:
  using: composite
  steps:
  - name: Setup Go proper
    uses: actions/setup-go@v2
    with:
      go-version: ${{ inputs.go-version }}

  - name: Cache Go dependencies
    if: inputs.cache
    uses: inloco/actions-cache@HEAD
    with:
      path: ${{ inputs.path }}
      key: ${{ inputs.key }}
      restore-keys: ${{ inputs.restore-keys }}

  - name: Check code format
    shell: bash
    if: inputs.format
    run: |
      UNFORMATED=$(gofmt -l ${{ inputs.source-path }})
      COUNT=$(echo $UNFORMATED | wc -w)
      if [ $COUNT -eq 0 ]; then
          echo "Files formatted properly!"
          exit 0
      fi
      echo "The following files are not properly formatted:"
      echo >&2 $UNFORMATED
      exit 1

  - name: Install GCC
    shell: bash
    if: inputs.gcc
    run: sudo apt update && sudo apt install -y gcc
